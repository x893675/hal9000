// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Oauth2Request struct {
	// required, type of client request verification.eg.[client_credentials or password or refresh_token]
	GrantType string `protobuf:"bytes,1,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	// required, client id
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// required, used for validate client credentials
	ClientSecret string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	// scope
	Scope string `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	// required or not depend on grant_type, user's name
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// required or not depend on grant_type, user's password
	Password string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	// required or not depend on grant_type, refresh token to check whether token expired
	RefreshToken         string   `protobuf:"bytes,7,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Oauth2Request) Reset()         { *m = Oauth2Request{} }
func (m *Oauth2Request) String() string { return proto.CompactTextString(m) }
func (*Oauth2Request) ProtoMessage()    {}
func (*Oauth2Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *Oauth2Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oauth2Request.Unmarshal(m, b)
}
func (m *Oauth2Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oauth2Request.Marshal(b, m, deterministic)
}
func (m *Oauth2Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oauth2Request.Merge(m, src)
}
func (m *Oauth2Request) XXX_Size() int {
	return xxx_messageInfo_Oauth2Request.Size(m)
}
func (m *Oauth2Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Oauth2Request.DiscardUnknown(m)
}

var xxx_messageInfo_Oauth2Request proto.InternalMessageInfo

func (m *Oauth2Request) GetGrantType() string {
	if m != nil {
		return m.GrantType
	}
	return ""
}

func (m *Oauth2Request) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Oauth2Request) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *Oauth2Request) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *Oauth2Request) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Oauth2Request) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Oauth2Request) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type AuthRequest struct {
	// required, user's name
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// required, user's password
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Token struct {
	// token type.eg.[bearer]
	TokenType string `protobuf:"bytes,1,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	// default 2h
	ExpiresIn int32 `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	//access token, generator by jwt(key=secrete key)
	AccessToken string `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	//refresh token, timeliness,default expired after 2 weeks
	RefreshToken string `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	//id token, generator by jwt(key="")
	IdToken              string   `protobuf:"bytes,5,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *Token) GetExpiresIn() int32 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *Token) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Token) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *Token) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

func init() {
	proto.RegisterType((*Oauth2Request)(nil), "hal9000.Oauth2Request")
	proto.RegisterType((*AuthRequest)(nil), "hal9000.AuthRequest")
	proto.RegisterType((*Token)(nil), "hal9000.Token")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 580 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xbb, 0x6e, 0x14, 0x3d,
	0x18, 0xfd, 0x3d, 0x7b, 0xcb, 0x7e, 0xb9, 0xfc, 0x92, 0x15, 0xa1, 0x61, 0x48, 0x84, 0xb3, 0x34,
	0x28, 0x22, 0x33, 0x4b, 0x12, 0x0a, 0x90, 0x28, 0x16, 0x81, 0x42, 0xd2, 0x44, 0xda, 0xa4, 0xa2,
	0x60, 0xe5, 0x78, 0x3e, 0x76, 0x46, 0x24, 0xf6, 0x60, 0x7b, 0x72, 0x69, 0x29, 0x78, 0x80, 0x20,
	0x9a, 0x3c, 0x01, 0x25, 0x2f, 0xc0, 0x53, 0x50, 0x22, 0xd1, 0xc0, 0x83, 0xa0, 0xb1, 0x27, 0xab,
	0x2c, 0x2b, 0x51, 0x51, 0x8d, 0x7c, 0xce, 0x99, 0xef, 0xf8, 0x1c, 0xdb, 0x00, 0xbc, 0xb4, 0x59,
	0x5c, 0x68, 0x65, 0x15, 0xed, 0x64, 0xfc, 0xf8, 0x71, 0xbf, 0xdf, 0x8f, 0x56, 0xc6, 0x4a, 0x8d,
	0x8f, 0x31, 0xe1, 0x45, 0x9e, 0x70, 0x29, 0x95, 0xe5, 0x36, 0x57, 0xd2, 0x78, 0x59, 0xf4, 0xc0,
	0x7d, 0xc4, 0xc6, 0x18, 0xe5, 0x86, 0x39, 0xe3, 0xe3, 0x31, 0xea, 0x44, 0x15, 0x4e, 0x31, 0xab,
	0xee, 0xfd, 0x24, 0xb0, 0xb8, 0x5f, 0x99, 0x6c, 0x0e, 0xf1, 0x5d, 0x89, 0xc6, 0xd2, 0x55, 0x80,
	0xb1, 0xe6, 0xd2, 0x8e, 0xec, 0x45, 0x81, 0x21, 0x61, 0xe4, 0x7e, 0x77, 0xd8, 0x75, 0xc8, 0xe1,
	0x45, 0x81, 0xf4, 0x0e, 0x74, 0xc5, 0x71, 0x8e, 0xd2, 0x8e, 0xf2, 0x34, 0x0c, 0x1c, 0x3b, 0xe7,
	0x81, 0xdd, 0x94, 0xde, 0x83, 0xc5, 0x9a, 0x34, 0x28, 0x34, 0xda, 0xb0, 0xe1, 0x04, 0x0b, 0x1e,
	0x3c, 0x70, 0x18, 0x5d, 0x86, 0x96, 0x11, 0xaa, 0xc0, 0xb0, 0xe9, 0x48, 0xbf, 0xa0, 0x11, 0xcc,
	0x95, 0x06, 0xb5, 0xe4, 0x27, 0x18, 0xb6, 0xfc, 0xd8, 0xeb, 0x75, 0xc5, 0x15, 0xdc, 0x98, 0x33,
	0xa5, 0xd3, 0xb0, 0xed, 0xb9, 0xeb, 0x75, 0x65, 0xa9, 0xf1, 0x8d, 0x46, 0x93, 0x8d, 0xac, 0x7a,
	0x8b, 0x32, 0xec, 0x78, 0xcb, 0x1a, 0x3c, 0xac, 0xb0, 0xde, 0x0b, 0x98, 0x1f, 0x94, 0x36, 0xbb,
	0x8e, 0x78, 0xd3, 0x8b, 0xfc, 0xc5, 0x2b, 0x98, 0xf6, 0xea, 0x7d, 0x26, 0xd0, 0x72, 0x03, 0xab,
	0x92, 0x9c, 0xdb, 0x54, 0x49, 0x0e, 0x71, 0x25, 0xad, 0x02, 0xe0, 0x79, 0x91, 0x6b, 0x34, 0xa3,
	0x5c, 0xba, 0x31, 0xad, 0x61, 0xb7, 0x46, 0x76, 0x25, 0x5d, 0x83, 0x05, 0x2e, 0x04, 0x1a, 0x53,
	0x6f, 0xd9, 0xb7, 0x34, 0xef, 0x31, 0x6f, 0x30, 0x13, 0xab, 0x39, 0x1b, 0x8b, 0xde, 0x86, 0xb9,
	0x3c, 0xad, 0x79, 0xdf, 0x59, 0x27, 0x4f, 0x1d, 0xb5, 0xf9, 0xa3, 0x01, 0xcd, 0x2a, 0x32, 0xfd,
	0x14, 0xc0, 0xe2, 0x0e, 0x5a, 0x77, 0xc6, 0xfe, 0xaf, 0x5b, 0x71, 0x7d, 0x91, 0xe2, 0xa9, 0x83,
	0x8f, 0x96, 0x26, 0xb8, 0x2f, 0xed, 0x3b, 0xb9, 0x1c, 0x7c, 0x21, 0xd0, 0xac, 0x44, 0xf4, 0xff,
	0x1d, 0xb4, 0xcc, 0xe9, 0x99, 0xf3, 0xdb, 0xdb, 0x87, 0xc6, 0x76, 0x7f, 0x9b, 0xbe, 0x84, 0xf5,
	0x21, 0xda, 0x52, 0x4b, 0x4c, 0xd9, 0x59, 0x86, 0x92, 0xd9, 0x0c, 0x99, 0x46, 0xa3, 0x4a, 0x2d,
	0x90, 0xa5, 0x0a, 0x0d, 0x93, 0xca, 0x32, 0x3c, 0xcf, 0x8d, 0x8d, 0x69, 0x04, 0x61, 0x44, 0x63,
	0x7f, 0x7d, 0x63, 0x5d, 0x88, 0xf8, 0xc0, 0x72, 0x5b, 0x9a, 0xab, 0x80, 0xb4, 0xf7, 0x9e, 0x43,
	0xe3, 0x51, 0xbf, 0x4f, 0x9f, 0xc2, 0xd6, 0xec, 0x40, 0x83, 0xfa, 0x14, 0x35, 0x2b, 0x25, 0x9e,
	0x17, 0x28, 0x2c, 0xa6, 0x0c, 0xb5, 0x56, 0x9a, 0x29, 0x21, 0x4a, 0xad, 0x31, 0x8d, 0x69, 0x1b,
	0x9a, 0x57, 0x01, 0xe9, 0x1c, 0xfd, 0xf7, 0xfe, 0xdb, 0xaf, 0x8f, 0xc1, 0x5a, 0x6f, 0x25, 0x11,
	0xd5, 0xf3, 0xc8, 0xf9, 0x49, 0x9c, 0xab, 0xe4, 0xf4, 0x61, 0xa2, 0x5c, 0xd6, 0xc4, 0x6d, 0xfe,
	0x09, 0x59, 0xa7, 0x5f, 0x09, 0x2c, 0xec, 0xa0, 0x1d, 0x4c, 0x6a, 0x59, 0x9e, 0xc4, 0xbf, 0x71,
	0x55, 0x66, 0x4a, 0xf9, 0x40, 0x2e, 0x07, 0xaf, 0xeb, 0x4e, 0x96, 0xaa, 0x4e, 0x6e, 0x54, 0xf2,
	0x2f, 0x13, 0xdc, 0xed, 0x45, 0x7f, 0x26, 0xa8, 0x9c, 0x26, 0xfb, 0x7f, 0xd6, 0x7c, 0x15, 0x14,
	0x47, 0x47, 0x6d, 0xf7, 0x8a, 0xb7, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x18, 0x54, 0x57, 0x97,
	0x28, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	GetOauthToken(ctx context.Context, in *Oauth2Request, opts ...grpc.CallOption) (*Token, error)
	GetAuthToken(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*Token, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) GetOauthToken(ctx context.Context, in *Oauth2Request, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/hal9000.Auth/GetOauthToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) GetAuthToken(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/hal9000.Auth/GetAuthToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	GetOauthToken(context.Context, *Oauth2Request) (*Token, error)
	GetAuthToken(context.Context, *AuthRequest) (*Token, error)
}

// UnimplementedAuthServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServer struct {
}

func (*UnimplementedAuthServer) GetOauthToken(ctx context.Context, req *Oauth2Request) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOauthToken not implemented")
}
func (*UnimplementedAuthServer) GetAuthToken(ctx context.Context, req *AuthRequest) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthToken not implemented")
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_GetOauthToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Oauth2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).GetOauthToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hal9000.Auth/GetOauthToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).GetOauthToken(ctx, req.(*Oauth2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_GetAuthToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).GetAuthToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hal9000.Auth/GetAuthToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).GetAuthToken(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hal9000.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOauthToken",
			Handler:    _Auth_GetOauthToken_Handler,
		},
		{
			MethodName: "GetAuthToken",
			Handler:    _Auth_GetAuthToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
